/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlsv.register.view;

import qlsv.register.entity.Subject;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class SubjectView extends javax.swing.JFrame {
    private final String[] columnNames = new String[] {
        "Tên môn học", "Số tín chỉ", "Mã lớp", "Loại lớp", "Giảng viên", "Hình thức thi", "Số lượng sinh viên"
    };
    /**
     * Creates new form SubjectView
     */
    public SubjectView() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle ("Thông tin môn học");
        
        ImageIcon icon = new ImageIcon("logo\\logo.png");
//        ImageIcon icon = new ImageIcon("src\\main\\resources\\img\\logo.png");
        setIconImage(icon.getImage());
        
        ButtonDelete.setEnabled(false);
        ButtonEdit.setEnabled(false);
        ButtonSearch.setEnabled(false);
        ButtonRefresh.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        LabelName = new javax.swing.JLabel();
        TextFieldName = new javax.swing.JTextField();
        LabelCredit = new javax.swing.JLabel();
        ComboBoxCredit = new javax.swing.JComboBox<>();
        LabelClassID = new javax.swing.JLabel();
        TextFieldTeacher = new javax.swing.JTextField();
        LabelTeacher = new javax.swing.JLabel();
        LabelTypeClass = new javax.swing.JLabel();
        LabelExam = new javax.swing.JLabel();
        ComboBoxExam = new javax.swing.JComboBox<>();
        LabelQuantity = new javax.swing.JLabel();
        ComboBoxTypeClass = new javax.swing.JComboBox<>();
        TextFieldQuantity = new javax.swing.JTextField();
        TextFieldIDClass = new javax.swing.JTextField();
        TextFieldSearch = new javax.swing.JTextField();
        ComboBoxSearch = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        ButtonSearch = new button.MyButton();
        ButtonRefresh = new button.MyButton();
        ButtonReturn = new button.MyButton();
        jPanel3 = new javax.swing.JPanel();
        ButtonAdd = new button.MyButton();
        ButtonDelete = new button.MyButton();
        ButtonEdit = new button.MyButton();
        ButtonClear = new button.MyButton();
        ButtonSoftByStudentQuantity = new button.MyButton();
        ButtonSoftByName = new button.MyButton();
        subjectTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        SubjectBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1440, 810));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(1440, 810));

        subjectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên học phần", "Số tín chỉ", "Mã lớp", "Loại lớp", "Giảng viên", "Hình thức thi", "Số lượng sinh viên đã đăng ký"
            }
        ));
        jScrollPane1.setViewportView(subjectTable);
        if (subjectTable.getColumnModel().getColumnCount() > 0) {
            subjectTable.getColumnModel().getColumn(1).setMinWidth(150);
            subjectTable.getColumnModel().getColumn(1).setMaxWidth(150);
            subjectTable.getColumnModel().getColumn(2).setMinWidth(150);
            subjectTable.getColumnModel().getColumn(2).setMaxWidth(150);
            subjectTable.getColumnModel().getColumn(3).setMinWidth(150);
            subjectTable.getColumnModel().getColumn(3).setMaxWidth(150);
            subjectTable.getColumnModel().getColumn(5).setMinWidth(150);
            subjectTable.getColumnModel().getColumn(5).setMaxWidth(150);
            subjectTable.getColumnModel().getColumn(6).setMinWidth(200);
            subjectTable.getColumnModel().getColumn(6).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 1240, 330));
        jPanel1.setOpaque(false);

        jPanel2.setOpaque(false);

        LabelName.setForeground(new java.awt.Color(255, 255, 255));
        LabelName.setText("Tên môn học:");

        TextFieldName.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        LabelCredit.setForeground(new java.awt.Color(255, 255, 255));
        LabelCredit.setText("Số tín chỉ:");

        ComboBoxCredit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        LabelClassID.setForeground(new java.awt.Color(255, 255, 255));
        LabelClassID.setText("Mã lớp :");

        TextFieldTeacher.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        LabelTeacher.setForeground(new java.awt.Color(255, 255, 255));
        LabelTeacher.setText("Giảng viên:");

        LabelTypeClass.setForeground(new java.awt.Color(255, 255, 255));
        LabelTypeClass.setText("Loại lớp:");

        LabelExam.setForeground(new java.awt.Color(255, 255, 255));
        LabelExam.setText("Hình thức thi:");

        ComboBoxExam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "Trắc nghiệm", "Tự luận", "Kết hợp", "Tiểu luận", "Thực hành", "Vấn đáp" }));

        LabelQuantity.setForeground(new java.awt.Color(255, 255, 255));
        LabelQuantity.setText("Số lượng sinh viên tối đa:");

        ComboBoxTypeClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "Lý thuyết", "Thực hành" }));

        TextFieldQuantity.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        TextFieldIDClass.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        TextFieldSearch.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TextFieldSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextFieldSearchFocusGained(evt);
            }
        });

        ComboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<none>", "Tên môn học", "Mã lớp" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tìm kiếm");

        ButtonSearch.setBorder(null);
        ButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Patient-Services_Icon5-removebg-preview.png"))); // NOI18N
        ButtonSearch.setBorderColor(new java.awt.Color(242, 242, 242));
        ButtonSearch.setColorClick(new java.awt.Color(0, 0, 0));
        ButtonSearch.setColorOver(new java.awt.Color(204, 204, 204));
        ButtonSearch.setRadius(24);
        ButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSearchActionPerformed(evt);
            }
        });

        ButtonRefresh.setBorder(null);
        ButtonRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Refresh.png"))); // NOI18N
        ButtonRefresh.setBorderColor(new java.awt.Color(242, 242, 242));
        ButtonRefresh.setColorClick(new java.awt.Color(0, 0, 0));
        ButtonRefresh.setColorOver(new java.awt.Color(204, 204, 204));
        ButtonRefresh.setRadius(24);
        ButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(LabelCredit)
                        .addComponent(LabelName))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(LabelExam)
                        .addGap(1, 1, 1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxExam, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(131, 131, 131)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(LabelClassID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LabelTypeClass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextFieldIDClass, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxTypeClass, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(LabelTeacher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TextFieldTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(LabelQuantity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addComponent(ButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelCredit)
                            .addComponent(ComboBoxCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelExam)
                            .addComponent(ComboBoxExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabelTeacher)
                            .addComponent(TextFieldTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelQuantity)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextFieldIDClass, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelClassID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboBoxTypeClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelTypeClass))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 1090, 180));

        ButtonReturn.setBorder(null);
        ButtonReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/OIP__3_-removebg-preview.png"))); // NOI18N
        ButtonReturn.setBorderColor(new java.awt.Color(242, 242, 242));
        ButtonReturn.setColorClick(new java.awt.Color(0, 0, 0));
        ButtonReturn.setColorOver(new java.awt.Color(204, 204, 204));
        ButtonReturn.setRadius(25);
        getContentPane().add(ButtonReturn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 24, 24));

        jPanel3.setOpaque(false);

        ButtonAdd.setBorder(null);
        ButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Add.png"))); // NOI18N
        ButtonAdd.setText("THÊM");
        ButtonAdd.setRadius(20);

        ButtonDelete.setBorder(null);
        ButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Delete.png"))); // NOI18N
        ButtonDelete.setText("XÓA");
        ButtonDelete.setBorderColor(new java.awt.Color(153, 0, 0));
        ButtonDelete.setColorClick(new java.awt.Color(255, 102, 102));
        ButtonDelete.setColorOver(new java.awt.Color(255, 204, 204));
        ButtonDelete.setRadius(20);

        ButtonEdit.setBorder(null);
        ButtonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Edit.png"))); // NOI18N
        ButtonEdit.setText("CẬP NHẬT");
        ButtonEdit.setBorderColor(new java.awt.Color(0, 153, 153));
        ButtonEdit.setColorClick(new java.awt.Color(0, 204, 204));
        ButtonEdit.setColorOver(new java.awt.Color(204, 255, 255));
        ButtonEdit.setRadius(20);

        ButtonClear.setBorder(null);
        ButtonClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Clear.png"))); // NOI18N
        ButtonClear.setText("LÀM MỚI");
        ButtonClear.setBorderColor(new java.awt.Color(153, 153, 0));
        ButtonClear.setColorClick(new java.awt.Color(255, 255, 102));
        ButtonClear.setColorOver(new java.awt.Color(255, 255, 204));
        ButtonClear.setRadius(20);

        ButtonSoftByStudentQuantity.setBorder(null);
        ButtonSoftByStudentQuantity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sortByNumber.png"))); // NOI18N
        ButtonSoftByStudentQuantity.setText("SẮP XẾP");
        ButtonSoftByStudentQuantity.setBorderColor(new java.awt.Color(153, 102, 0));
        ButtonSoftByStudentQuantity.setColorClick(new java.awt.Color(255, 153, 51));
        ButtonSoftByStudentQuantity.setColorOver(new java.awt.Color(255, 204, 153));
        ButtonSoftByStudentQuantity.setRadius(20);

        ButtonSoftByName.setBorder(null);
        ButtonSoftByName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sortByName.png"))); // NOI18N
        ButtonSoftByName.setText("SẮP XẾP");
        ButtonSoftByName.setBorderColor(new java.awt.Color(153, 0, 153));
        ButtonSoftByName.setColorClick(new java.awt.Color(255, 102, 255));
        ButtonSoftByName.setColorOver(new java.awt.Color(255, 204, 255));
        ButtonSoftByName.setRadius(20);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSoftByStudentQuantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSoftByName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonSoftByName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonSoftByStudentQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        ButtonAdd.setFont(new java.awt.Font("Cambria", 1, 14));
        ButtonDelete.setFont(new java.awt.Font("Cambria", 1, 14));
        ButtonEdit.setFont(new java.awt.Font("Cambria", 1, 14));
        ButtonClear.setFont(new java.awt.Font("Cambria", 1, 14));
        ButtonSoftByStudentQuantity.setFont(new java.awt.Font("Cambria", 1, 14));
        ButtonSoftByName.setFont(new java.awt.Font("Cambria", 1, 14));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 405, 130, 330));

        subjectTitle.setFont(new java.awt.Font("Palatino Linotype", 1, 36)); // NOI18N
        subjectTitle.setForeground(new java.awt.Color(255, 255, 255));
        subjectTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subjectTitle.setText("THÔNG TIN HỌC PHẦN");
        subjectTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(subjectTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, -1, 73));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 1380, 10));

        SubjectBackGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/SubjectBackGround.png"))); // NOI18N
        SubjectBackGround.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(SubjectBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 810));
        SubjectBackGround.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextFieldSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextFieldSearchFocusGained
        ButtonSearch.setEnabled(true);
    }//GEN-LAST:event_TextFieldSearchFocusGained

    private void ButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSearchActionPerformed
        if (getComboBoxSearch().equals("<none>") && !TextFieldSearch.getText().equals("") ) {
            ButtonSearch.setEnabled(true);
        } else {
            ButtonSearch.setEnabled(false);
        }
        
        if (getComboBoxSearch().equals("<none>") || TextFieldSearch.getText().equals("")) {
            ButtonRefresh.setEnabled(false);
        } else {
            ButtonRefresh.setEnabled(true);
        }
    }//GEN-LAST:event_ButtonSearchActionPerformed

    private void ButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRefreshActionPerformed
        ButtonRefresh.setEnabled(false);
        ButtonSearch.setEnabled(false);
    }//GEN-LAST:event_ButtonRefreshActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private button.MyButton ButtonAdd;
    private button.MyButton ButtonClear;
    private button.MyButton ButtonDelete;
    private button.MyButton ButtonEdit;
    private button.MyButton ButtonRefresh;
    private button.MyButton ButtonReturn;
    private button.MyButton ButtonSearch;
    private button.MyButton ButtonSoftByName;
    private button.MyButton ButtonSoftByStudentQuantity;
    private javax.swing.JComboBox<String> ComboBoxCredit;
    private javax.swing.JComboBox<String> ComboBoxExam;
    private javax.swing.JComboBox<String> ComboBoxSearch;
    private javax.swing.JComboBox<String> ComboBoxTypeClass;
    private javax.swing.JLabel LabelClassID;
    private javax.swing.JLabel LabelCredit;
    private javax.swing.JLabel LabelExam;
    private javax.swing.JLabel LabelName;
    private javax.swing.JLabel LabelQuantity;
    private javax.swing.JLabel LabelTeacher;
    private javax.swing.JLabel LabelTypeClass;
    private javax.swing.JLabel SubjectBackGround;
    private javax.swing.JTextField TextFieldIDClass;
    private javax.swing.JTextField TextFieldName;
    private javax.swing.JTextField TextFieldQuantity;
    private javax.swing.JTextField TextFieldSearch;
    private javax.swing.JTextField TextFieldTeacher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable subjectTable;
    private javax.swing.JLabel subjectTitle;
    // End of variables declaration//GEN-END:variables
    
    public String getTextFieldSearch() {
        return TextFieldSearch.getText();
    }
    
    public void setTextFieldSearch(String s) {
        TextFieldSearch.setText(s);
    }
    
    public String getComboBoxSearch() {
        return ComboBoxSearch.getSelectedItem().toString();
    }

    public void addReturnListener(ActionListener listener) {
        ButtonReturn.addActionListener(listener);
    }
    
    public void addAddListener(ActionListener listener) {
        ButtonAdd.addActionListener(listener);
    }
    
    public void addDeleteListener(ActionListener listener) {
        ButtonDelete.addActionListener(listener);
    }
    
    public void addEditListener(ActionListener listener) {
        ButtonEdit.addActionListener(listener);
    }
    
    public void addSortNameListener(ActionListener listener) {
        ButtonSoftByName.addActionListener(listener);
    }
    
    public void addSortRegistedStudentListener(ActionListener listener) {
        ButtonSoftByStudentQuantity.addActionListener(listener);
    }
    
    public void addSearchListener(ActionListener listener) {
        ButtonSearch.addActionListener(listener);
    }
    
    public void addRefreshListener(ActionListener listener) {
        ButtonRefresh.addActionListener(listener);
    }
    
    public void addClearListener(ActionListener listener) {
        ButtonClear.addActionListener(listener);
    }
    
    public void addListSubjectSelectionListener(ListSelectionListener listener) {
        subjectTable.getSelectionModel().addListSelectionListener(listener);
    }
    
    public void showListSubjects(List<Subject> list) {
        int size = list.size();
        // với bảng subjectTable có 7 cột, 
        // khởi tạo mảng 2 chiều subjects, trong đó:
        // số hàng: là kích thước của list subject 
        // số cột: là 7
        Object [][] subjects = new Object[size][7];
        for (int i = 0; i < size; i++) {
            subjects[i][0] = list.get(i).getName();
            subjects[i][1] = list.get(i).getCredit();
            subjects[i][2] = list.get(i).getIDclass();
            subjects[i][3] = list.get(i).getTypeClass();
            subjects[i][4] = list.get(i).getTeacher();
            subjects[i][5] = list.get(i).getExam();
            subjects[i][6] = list.get(i).getRegistedStudent() + "/" + list.get(i).getQuantity();
        }
        subjectTable.setModel(new DefaultTableModel((Object[][])subjects, columnNames));
        subjectTable.getColumnModel().getColumn(1).setMaxWidth(150);
        subjectTable.getColumnModel().getColumn(1).setMinWidth(150);
        subjectTable.getColumnModel().getColumn(2).setMaxWidth(150);
        subjectTable.getColumnModel().getColumn(2).setMinWidth(150);
        subjectTable.getColumnModel().getColumn(3).setMaxWidth(150);
        subjectTable.getColumnModel().getColumn(3).setMinWidth(150);
        subjectTable.getColumnModel().getColumn(5).setMaxWidth(150);
        subjectTable.getColumnModel().getColumn(5).setMinWidth(150);
        subjectTable.getColumnModel().getColumn(6).setMaxWidth(200);
        subjectTable.getColumnModel().getColumn(6).setMinWidth(200);
    }
    
    public void fillSubjectFromSelectedRow() {
        // lấy chỉ số của hàng được chọn 
        int row = subjectTable.getSelectedRow();
        if (row >= 0) {
            TextFieldName.setText(subjectTable.getModel().getValueAt(row, 0).toString());
            ComboBoxCredit.setSelectedItem(subjectTable.getModel().getValueAt(row, 1).toString());
            TextFieldIDClass.setText(subjectTable.getModel().getValueAt(row, 2).toString());
            ComboBoxTypeClass.setSelectedItem(subjectTable.getModel().getValueAt(row, 3));
            TextFieldTeacher.setText(subjectTable.getModel().getValueAt(row, 4).toString());
            ComboBoxExam.setSelectedItem(subjectTable.getModel().getValueAt(row, 5));
            TextFieldQuantity.setText(subjectTable.getModel().getValueAt(row, 6).toString().substring(subjectTable.getModel().getValueAt(row, 6).toString().lastIndexOf("/") + 1));
            // enable Edit and Delete buttons
            ButtonEdit.setEnabled(true);
            ButtonDelete.setEnabled(true);
            // disable buttons
            ButtonAdd.setEnabled(false);
            ButtonSoftByName.setEnabled(false);
            ButtonSoftByStudentQuantity.setEnabled(false);
            ButtonSearch.setEnabled(false);
            ComboBoxSearch.setEnabled(false);
            TextFieldSearch.setEnabled(false);
            TextFieldIDClass.setEditable(false);
            TextFieldName.setEditable(false);
            TextFieldIDClass.setFocusable(false);
            TextFieldName.setFocusable(false);
        }
    }
    
    public void clearSubjectInfo() {
        TextFieldName.setText("");
        ComboBoxCredit.setSelectedItem("<none>");
        TextFieldIDClass.setText("");
        ComboBoxTypeClass.setSelectedItem("<none>");
        TextFieldTeacher.setText("");
        ComboBoxExam.setSelectedItem("<none>");
        TextFieldQuantity.setText("");
        
        // enable Edit and Delete buttons
        ButtonEdit.setEnabled(false);
        ButtonDelete.setEnabled(false);
        // disable buttons
        ButtonAdd.setEnabled(true);
        ButtonSoftByName.setEnabled(true);
        ButtonSoftByStudentQuantity.setEnabled(true);
        ButtonSearch.setEnabled(true);
        ComboBoxSearch.setEnabled(true);
        TextFieldSearch.setEnabled(true);
        TextFieldName.setEditable(true);
        TextFieldIDClass.setEditable(true);
        TextFieldIDClass.setFocusable(true);
        TextFieldName.setFocusable(true);
        subjectTable.clearSelection();
    }
    
    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.INFORMATION_MESSAGE);
    }
    
    public Subject getSubjectInfo() {
        // validate student
        if (!validateName() || !validateCredit() || !validateExam() || !validateIDClass() || !validateTypeClass() || !validateTeacher() || !validateQuantity()) {
            return null;
        }
        try {
            Subject subject = new Subject();
            subject.setName(TextFieldName.getText().trim());
            subject.setCredit(Integer.parseInt(ComboBoxCredit.getSelectedItem().toString()));
            subject.setExam(ComboBoxExam.getSelectedItem().toString());
            subject.setIDclass(TextFieldIDClass.getText().trim());
            subject.setTypeClass(ComboBoxTypeClass.getSelectedItem().toString());
            subject.setTeacher(TextFieldTeacher.getText().trim());
            subject.setQuantity(Integer.parseInt(TextFieldQuantity.getText().trim()));
            return subject;
        } 
        catch (NumberFormatException e) {
            showMessage("Số lượng sinh viên tối đa phải là số.");
        }
        catch (Exception e) {
            showMessage(e.getMessage());
        }
        return null;
    }
    
    private boolean validateName() {
        String name = TextFieldName.getText();
        if ("".equals(name.trim())) {
            TextFieldName.requestFocus();
            showMessage("Tên môn học không được trống.");
            return false;
        }
        return true;
    }
    
    private boolean validateCredit() {
        String credit = "" + ComboBoxCredit.getSelectedItem();
        if ("<none>".equals(credit)) {
            ComboBoxCredit.requestFocus();
            showMessage("Số tín chỉ không được trống.");
            return false;
        }
        return true;
    }
    
    private boolean validateIDClass() {
        String IDclass = TextFieldIDClass.getText();
        if ("".equals(IDclass.trim())) {
            TextFieldIDClass.requestFocus();
            showMessage("Mã lớp không được trống.");
            return false;
        }
        return true;
    }
    
    private boolean validateTypeClass() {
        String credit = "" + ComboBoxTypeClass.getSelectedItem();
        if ("<none>".equals(credit)) {
            ComboBoxTypeClass.requestFocus();
            showMessage("Loại lớp không được trống.");
            return false;
        }
        return true;
    }
    
    private boolean validateTeacher() {
        String teacher = TextFieldTeacher.getText();
        if ("".equals(teacher.trim())) {
            TextFieldTeacher.requestFocus();
            showMessage("Giảng viên không được trống.");
            return false;
        }
        return true;
    }
    
    private boolean validateExam() {
        String exam = "" + ComboBoxExam.getSelectedItem();
        if ("<none>".equals(exam)) {
            ComboBoxExam.requestFocus();
            showMessage("Hình thức thi không được trống.");
            return false;
        }
        return true;
    }
    
    private boolean validateQuantity() {
        String quantity = TextFieldQuantity.getText();
        if ("".equals(quantity.trim())) {
            TextFieldQuantity.requestFocus();
            showMessage("Số lượng sinh viên tối đa không được trống.");
            return false;
        }
        
        if ("0".equals(quantity.trim())) {
            TextFieldQuantity.requestFocus();
            showMessage("Số lượng sinh viên tối đa phải lớn hơn 0");
            return false;
        }
        return true;
    }
}